{"version":3,"sources":["autobotRoutes.js"],"names":["express","require","router","Router","autobotService","get","req","res","pool","query","autobots","json","console","error","status","result","count","rows","solution","module","exports"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AACA,IAAMC,cAAc,GAAGH,OAAO,CAAC,4BAAD,CAA9B,C,CAEA;;;AACAC,MAAM,CAACG,GAAP,CAAW,WAAX,EAAwB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEKC,IAAI,CAACC,KAAL,CAAW,wBAAX,CAFL;;AAAA;AAAA;AAAA;AAEbC,UAAAA,QAFa;AAGpBH,UAAAA,GAAG,CAACI,IAAJ,CAASD,QAAT;AAHoB;AAAA;;AAAA;AAAA;AAAA;AAKpBE,UAAAA,OAAO,CAACC,KAAR,CAAc,0BAAd;AACAN,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEE,YAAAA,KAAK,EAAE;AAAT,WAArB;;AANoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB,E,CAUA;;AACAX,MAAM,CAACG,GAAP,CAAW,iBAAX,EAA8B,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEHC,IAAI,CAACC,KAAL,CAAW,wCAAX,CAFG;;AAAA;AAAA;AAAA;AAEnBM,UAAAA,MAFmB;AAG1BR,UAAAA,GAAG,CAACI,IAAJ,CAAS;AAAEK,YAAAA,KAAK,EAAED,MAAM,CAAC,CAAD,CAAN,CAAUC;AAAnB,WAAT;AAH0B;AAAA;;AAAA;AAAA;AAAA;AAK1BJ,UAAAA,OAAO,CAACC,KAAR,CAAc,gCAAd;AACAN,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEE,YAAAA,KAAK,EAAE;AAAT,WAArB;;AAN0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B;AAUAX,MAAM,CAACG,GAAP,CAAW,UAAX,EAAuB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEEC,IAAI,CAACC,KAAL,CAAW,0BAAX,CAFF;;AAAA;AAAA;AAAA;AAEZQ,UAAAA,IAFY;AAGnBV,UAAAA,GAAG,CAACI,IAAJ,CAAS;AAAEI,YAAAA,MAAM,EAAEE,IAAI,CAAC,CAAD,CAAJ,CAAQC;AAAlB,WAAT;AAHmB;AAAA;;AAAA;AAAA;AAAA;AAKnBN,UAAAA,OAAO,CAACC,KAAR,CAAc,6BAAd;AACAN,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEE,YAAAA,KAAK,EAAE;AAAT,WAArB;;AANmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAWAM,MAAM,CAACC,OAAP,GAAiBlB,MAAjB","sourcesContent":["// const express = require('express');\r\n// const router = express.Router();\r\n// const pool = require('../utils/db');\r\n// const autobotsController = require('../controllers/autobotsController');\r\n\r\n\r\n// router.get('/api/autobots/count', autobotsController.getAutobotCount);\r\n\r\n// // Route to get the current count of Autobots\r\n// router.get('/autobot-count', async (req, res) => {\r\n//   try {\r\n//     const [rows] = await pool.query('SELECT COUNT(*) AS count FROM Autobots');\r\n//     res.json({ count: rows[0].count });\r\n//   } catch (error) {\r\n//     res.status(500).json({ error: 'Error fetching autobot count' });\r\n//   }\r\n// });\r\n\r\n// module.exports = router;\r\n\r\n// const express = require('express');\r\n// const router = express.Router();\r\n// const autobotService = require('../services/autobotService');\r\n\r\n// // Route to get the count of Autobots\r\n// router.get('/autobots/count', async (req, res) => {\r\n//   try {\r\n//     const count = await autobotService.getAutobotCount();\r\n//     res.json({ count });\r\n//   } catch (error) {\r\n//     console.error('Error fetching Autobot count:', error);\r\n//     res.status(500).json({ error: 'Failed to fetch Autobot count' });\r\n//   }\r\n// });\r\n\r\n// module.exports = router;\r\n\r\nconst express = require('express');\r\nconst router = express.Router();\r\nconst autobotService = require('../services/autobotService');\r\n\r\n// Route to get all Autobots\r\nrouter.get('/autobots', async (req, res) => {\r\n  try {\r\n    const [autobots] = await pool.query('SELECT * FROM Autobots');\r\n    res.json(autobots);\r\n  } catch (error) {\r\n    console.error('Error fetching Autobots:', error);\r\n    res.status(500).json({ error: 'Failed to fetch Autobots' });\r\n  }\r\n});\r\n\r\n// Route to get the count of Autobots\r\nrouter.get('/autobots/count', async (req, res) => {\r\n  try {\r\n    const [result] = await pool.query('SELECT COUNT(*) AS count FROM Autobots');\r\n    res.json({ count: result[0].count });\r\n  } catch (error) {\r\n    console.error('Error fetching Autobots count:', error);\r\n    res.status(500).json({ error: 'Failed to fetch Autobots count' });\r\n  }\r\n});\r\n\r\nrouter.get('/test-db', async (req, res) => {\r\n  try {\r\n    const [rows] = await pool.query('SELECT 1 + 1 AS solution');\r\n    res.json({ result: rows[0].solution });\r\n  } catch (error) {\r\n    console.error('Database connection failed:', error);\r\n    res.status(500).json({ error: 'Database connection failed' });\r\n  }\r\n});\r\n\r\n\r\nmodule.exports = router;\r\n\r\n\r\n"],"file":"autobotRoutes.dev.js"}