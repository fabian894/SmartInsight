{"version":3,"sources":["app.js"],"names":["require","config","express","app","pool","autobotService","autobotRoutes","use","json","get","req","res","send","query","rows","result","solution","status","error","PORT","process","env","listen","console","log"],"mappings":";;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,IAAMC,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMG,GAAG,GAAGD,OAAO,EAAnB;;AACA,IAAME,IAAI,GAAGJ,OAAO,CAAC,YAAD,CAApB;;AACA,IAAMK,cAAc,GAAGL,OAAO,CAAC,2BAAD,CAA9B;;AACA,IAAMM,aAAa,GAAGN,OAAO,CAAC,wBAAD,CAA7B;;AAEAG,GAAG,CAACI,GAAJ,CAAQL,OAAO,CAACM,IAAR,EAAR,E,CAEA;;AACAL,GAAG,CAACI,GAAJ,CAAQ,MAAR,EAAgBD,aAAhB,E,CAEA;;AACAH,GAAG,CAACM,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,4BAAT;AACD,CAFD;AAIAT,GAAG,CAACM,GAAJ,CAAQ,UAAR,EAAoB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEKP,IAAI,CAACS,KAAL,CAAW,0BAAX,CAFL;;AAAA;AAAA;AAAA;AAETC,UAAAA,IAFS;AAGhBH,UAAAA,GAAG,CAACH,IAAJ,CAAS;AAAEO,YAAAA,MAAM,EAAED,IAAI,CAAC,CAAD,CAAJ,CAAQE;AAAlB,WAAT;AAHgB;AAAA;;AAAA;AAAA;AAAA;AAKhBL,UAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AAAEU,YAAAA,KAAK,EAAE;AAAT,WAArB;;AALgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;AASA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACAhB,GAAG,CAACmB,MAAJ,CAAWH,IAAX,EAAiB,YAAM;AACrBI,EAAAA,OAAO,CAACC,GAAR,qCAAyCL,IAAzC;AACD,CAFD","sourcesContent":["// const express = require('express');\r\n// const app = express();\r\n\r\n// app.use(express.json());\r\n\r\n// // Basic route to verify the server is running\r\n// app.get('/', (req, res) => {\r\n//   res.send('TweetAI Backend is running');\r\n// });\r\n\r\n// const PORT = process.env.PORT || 3000;\r\n// app.listen(PORT, () => {\r\n//   console.log(`Server is running on port ${PORT}`);\r\n// });\r\n\r\nrequire('dotenv').config();\r\n\r\nconst express = require('express');\r\nconst app = express();\r\nconst pool = require('./utils/db'); \r\nconst autobotService = require('./services/autobotService');\r\nconst autobotRoutes = require('./routes/autobotRoutes');\r\n\r\napp.use(express.json());\r\n\r\n//app.use('/api', autobotService);\r\napp.use('/api', autobotRoutes);\r\n\r\n// verify the server is running\r\napp.get('/', (req, res) => {\r\n  res.send('TweetAI Backend is running');\r\n});\r\n\r\napp.get('/test-db', async (req, res) => {\r\n  try {\r\n    const [rows] = await pool.query('SELECT 1 + 1 AS solution');\r\n    res.json({ result: rows[0].solution });\r\n  } catch (error) {\r\n    res.status(500).json({ error: 'Database connection failed' });\r\n  }\r\n});\r\n\r\nconst PORT = process.env.PORT || 3000;\r\napp.listen(PORT, () => {\r\n  console.log(`Server is running on port ${PORT}`);\r\n});\r\n"],"file":"app.dev.js"}