"use strict";function _slicedToArray(e,r){return _arrayWithHoles(e)||_iterableToArrayLimit(e,r)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(e,r){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)){var t=[],n=!0,o=!1,a=void 0;try{for(var i,s=e[Symbol.iterator]();!(n=(i=s.next()).done)&&(t.push(i.value),!r||t.length!==r);n=!0);}catch(e){o=!0,a=e}finally{try{n||null==s.return||s.return()}finally{if(o)throw a}}return t}}function _arrayWithHoles(e){if(Array.isArray(e))return e}require("dotenv").config();var express=require("express"),app=express(),pool=require("./utils/db"),autobotService=require("./services/autobotService"),autobotRoutes=require("./routes/autobotRoutes");app.use(express.json()),app.use("/api",autobotRoutes),app.get("/",function(e,r){r.send("TweetAI Backend is running")}),app.get("/test-db",function(e,r){var t,n,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(pool.query("SELECT 1 + 1 AS solution"));case 3:t=e.sent,n=_slicedToArray(t,1),o=n[0],r.json({result:o[0].solution}),e.next=12;break;case 9:e.prev=9,e.t0=e.catch(0),r.status(500).json({error:"Database connection failed"});case 12:case"end":return e.stop()}},null,null,[[0,9]])});var PORT=process.env.PORT||3e3;app.listen(PORT,function(){console.log("Server is running on port ".concat(PORT))});
//# sourceMappingURL=app.min.js.map
